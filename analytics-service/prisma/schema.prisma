generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdQuizzes Quiz[]
  comments Comment[]
  leaderboardEntries LeaderboardEntry[]

  @@index([role])
  @@index([createdAt])
}

model Quiz {
  id        String   @id @default(cuid())
  title     String
  description String
  questions Question[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy User     @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String
  category String
  difficulty Difficulty @default(MEDIUM)
  timeLimit Int?
  comments Comment[]
  leaderboardEntries LeaderboardEntry[]

  @@index([category])
  @@index([difficulty])
  @@index([createdById])
  @@index([createdAt])
  @@index([timeLimit])
  @@index([category, difficulty])
  @@index([category, createdAt])
}

model Question {
  id        String   @id @default(cuid())
  title     String
  type     QuestionType @default(SINGLE)
  answers   String[] @default([])
  correctAnswer String[]
  quiz      Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([quizId])
  @@index([type])
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([quizId])
  @@index([userId])
  @@index([createdAt])
  @@index([quizId, createdAt])
}

model LeaderboardEntry {
  id        String   @id @default(cuid())
  score     Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId    String
  timeSpent Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([quizId, score])
  @@index([userId])
  @@index([score])
  @@unique([userId, quizId])
}

enum Role {
  USER
  MODERATOR
  ADMIN
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum QuestionType {
  SINGLE
  MULTIPLE
  OPEN
}